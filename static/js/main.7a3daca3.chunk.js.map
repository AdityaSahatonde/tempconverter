{"version":3,"sources":["TempInput.js","App.js","reportWebVitals.js","index.js"],"names":["TempInput","props","handleChange","bind","e","this","handleFunc","type","target","value","placeholder","className","style","width","temp","onChange","Component","App","state","LastInput","LastType","tempFah","setState","celsius","fahrenheit","celcius","fToC","farha","cToF","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAIAC,aAAe,EAAKA,aAAaC,KAAlB,gBALP,E,gDAQlB,SAAaC,GAITC,KAAKJ,MAAMK,WAAWD,KAAKJ,MAAMM,KAAKH,EAAEI,OAAOC,S,oBAGnD,WACI,GAAqB,MAAlBJ,KAAKJ,MAAMM,KACV,IAAIG,EAAc,iCAGjBA,EAAc,8BAEnB,OACI,qBAAKC,UAAU,uBAAf,SACA,qBAAKA,UAAU,oBAAoBC,MAAO,CAACC,MAAM,KAAjD,SACI,sBAAKF,UAAU,qBAAf,UACA,uBAAOF,MAAOJ,KAAKJ,MAAMa,KAAMJ,YAAaA,EAAaK,SAAUV,KAAKH,eACrD,MAAlBG,KAAKJ,MAAMM,KAAY,wCAAe,sD,GA5BhBS,aCClBC,G,wDACnB,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IACDiB,MAAM,CACTC,UAAU,GACVC,SAAS,IAGX,EAAKC,QAAU,EAAKA,QAAQlB,KAAb,gBAPC,E,2CASlB,SAAQI,EAAKO,GAEXT,KAAKiB,SAAS,CACZH,UAAUL,EACVM,SAASb,M,kBAeZ,SAAKgB,GAMJ,OAHoB,EADVA,EACc,EAAI,K,kBAM/B,SAAKC,GAMF,OAH0B,GADhBA,EACU,IAAU,I,oBAKhC,WACE,IAAIC,EAAgC,MAAtBpB,KAAKa,MAAME,SAAiBf,KAAKa,MAAMC,UAAUd,KAAKqB,KAAKrB,KAAKa,MAAMC,WAChFQ,EAA8B,MAAtBtB,KAAKa,MAAME,SAAiBf,KAAKa,MAAMC,UAAUd,KAAKuB,KAAKvB,KAAKa,MAAMC,WAClF,OACE,sBAAKR,UAAU,sBAAsBC,MAAO,CAACiB,WAAW,UAAxD,UACE,uDACA,cAAC,EAAD,CAAWtB,KAAK,IAAIO,KAAMW,EAASnB,WAAYD,KAAKgB,UAEtD,cAAC,EAAD,CAAWd,KAAK,IAAIO,KAAMa,EAAOrB,WAAYD,KAAKgB,iB,GAtDvBL,cCSlBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a3daca3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './TempInput.css'\r\nexport default class TempInput extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // this.state={\r\n        //     temp:this.props.temp\r\n        // }\r\n         this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    handleChange(e){\r\n        // this.setState({\r\n        //     temp:e.target.value\r\n        // })\r\n        this.props.handleFunc(this.props.type,e.target.value);\r\n        // console.log(this.props.type+\" \"+e.target.value)\r\n    }\r\n    render() {\r\n        if(this.props.type==='c'){\r\n            var placeholder = \"Enter Celcius Temperature\";\r\n        }\r\n        else{\r\n             placeholder = \"Enter Farhanite Temperature\";\r\n        }\r\n        return (\r\n            <div className=\"container-fluid ms-2\">\r\n            <div className=\"row  mx-auto mt-2\" style={{width:500}}>\r\n                <div className=\"col-md-7 size ms-5\">\r\n                <input value={this.props.temp} placeholder={placeholder} onChange={this.handleChange}/>\r\n                {this.props.type==='c'? <p>Celsius</p>:<p>Fahrenheit</p>}\r\n                </div>\r\n            </div>\r\n            \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport TempInput from './TempInput'\nimport './App.css'\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      LastInput:'',\n      LastType:''\n    }\n    // this.tempCel = this.tempCel.bind(this);\n    this.tempFah = this.tempFah.bind(this);\n  }\n  tempFah(type,temp){\n\n    this.setState({\n      LastInput:temp,\n      LastType:type\n\n    });\n    // console.log(type+\" \"+temp);\n    \n  // }\n  // tempCel(type,temp){\n\n  //   this.setState({\n  //     LastInput:temp,\n  //     LastType:type\n\n  //   })\n    // console.log(this.LastInput+\" \"+this.LastType);\n  }\n   cToF(celsius) \n{\n  var cTemp = celsius;\n  var cToFahr = cTemp * 9 / 5 + 32;\n  // var message = cTemp+'\\xB0C is ' + cToFahr + ' \\xB0F.';\n    // console.log(message);\n    return cToFahr;\n}\n\n fToC(fahrenheit) \n{\n  var fTemp = fahrenheit;\n  var fToCel = (fTemp - 32) * 5 / 9;\n  // var message = fTemp+'\\xB0F is ' + fToCel + '\\xB0C.';\n    // console.log(message);\n    return fToCel;\n} \n  render() {\n    var celcius = this.state.LastType==='c' ? this.state.LastInput:this.fToC(this.state.LastInput);\n    var farha = this.state.LastType==='f' ? this.state.LastInput:this.cToF(this.state.LastInput);\n    return (\n      <div className=\"App col-md-10 me-5 \" style={{alignItems:'center'}}>\n        <p> Temperature Converter</p>\n        <TempInput type='c' temp={celcius} handleFunc={this.tempFah}  />\n      \n      <TempInput type='f' temp={farha} handleFunc={this.tempFah}  />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}